import winston from "winston";
import LokiTransport from "winston-loki";
import {LoggingWinston} from "@google-cloud/logging-winston";
import * as functionsLogger from "firebase-functions/logger";

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Winston —É—Ä–æ–≤–Ω–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
const loggerLevels = {
  error: 0, // –û—à–∏–±–∫–∏
  warn: 1, // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
  info: 2, // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –ª–æ–≥–∏
  http: 3, // HTTP-–∑–∞–ø—Ä–æ—Å—ã
  debug: 4, // –û—Ç–ª–∞–¥–∫–∞
};

// üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Firebase Logging
const firebaseTransport = new winston.transports.Stream({
  stream: process.stdout,
  log: (info, callback) => {
    switch (info.level) {
    case "error":
      functionsLogger.error(info.message, info);
      break;
    case "warn":
      functionsLogger.warn(info.message, info);
      break;
    case "info":
      functionsLogger.info(info.message, info);
      break;
    case "debug":
      functionsLogger.debug(info.message, info);
      break;
    }
    callback();
  },
});

// üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Loki (Grafana)
const lokiTransport = new LokiTransport({
  host: "https://your-loki-url",
  labels: {service: "firebase-functions"},
  json: true,
  replaceTimestamp: true,
});

// üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Google Cloud Logging
const googleCloudTransport = new LoggingWinston();

const logger = winston.createLogger({
  levels: loggerLevels, // –£–∫–∞–∑—ã–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  level: "debug", // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤ (–≤—Å–µ –æ—Ç debug –¥–æ error)
  format: winston.format.combine(
    winston.format.timestamp(), // –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º—è –∫ –∫–∞–∂–¥–æ–º—É –ª–æ–≥—É
    winston.format.json() // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
  ),
  transports: [firebaseTransport, lokiTransport, googleCloudTransport],
});

export default logger;
